[tool.poetry]
name = "qce24-qre-challenge"
version = "0.1.0"
description = ""
authors = ["Walden-Killick <walden.killick@cambridgeconsultants.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
qiskit = "^1.1.1"
matplotlib = "^3.9.0"
pylatexenc = "^2.10"
pyqsp = "^0.1.6"
azure-quantum = {extras = ["qiskit"], version = "^2.0.1"}
tensorflow = "^2.16.2"
cirq = "^1.4.1"
seaborn = "^0.13.2"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.4"
ruff = "^0.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
# Enable flake8 (Pyflakes + pycodestyle), pep8-naming, flake8-bugbear, pylint 
# and check for unused error suppression 
select = ["D", "F", "E", "W", "N", "B", "PL", "RUF100"]

# Ignore too many argument errors, and the opinionated flake8-bugbear rules
ignore = ["PLR0912","PLR0913", "PLR0914", "B901", "B904", "B905", "B909", "PLR2004"]

[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in these files
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.pycodestyle]
# E501 reports lines that exceed the length of 120 as per original flake8 settings.
max-line-length = 120

[tool.ruff.lint.pydocstyle]
convention = "numpy"